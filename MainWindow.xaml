<Window x:Class="GraficInterfacePresentation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Layout Demo Application"
        Height="400" Width="525">

    <Window.Resources>
        <Style TargetType="Button">
            <Style.Triggers>
                <Trigger Property="FlowDirection" Value="RightToLeft">
                    <Setter Property="Background" Value="LightCoral"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </Trigger>
                <Trigger Property="FlowDirection" Value="LeftToRight">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <TabControl>
        <!-- WrapPanel Tab -->
        <TabItem Header="WrapPanel">
            <StackPanel>
                <!-- Оpis WrapPanel -->
                <TextBlock Text="WrapPanel ustawia elementy sekwencyjnie w rzędach lub kolumnach i automatycznie przenosi je do nowego rzędu/kolumny, gdy brakuje miejsca"
                   TextWrapping="Wrap" 
                   Margin="5, 0, 0, 10"
                   FontWeight="Bold"
                   FontSize="15"/>
                
                <!-- WrapPanel z elementami -->
                <WrapPanel Orientation="Horizontal" Margin="0">
                    <Button Content="Button 1" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 2" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 3" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 4" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 5" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 6" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 7" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 8" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 9" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 10" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 11" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 12" Width="100" Height="50" Margin="5"/>
                </WrapPanel>

                <TextBlock Text="Idealnie nadaje się do dynamicznych układów, takich jak galerie obrazów czy zestawy przycisków, gdy nie znamy z góry liczby elementów."
                   TextWrapping="Wrap" 
                   Margin="5, 20, 0, 10"
                   FontSize="14"/>

                <TextBlock Text="TextBlock.TextWrapping określa sposób zawijania tekstu w elemencie TextBlock."
                   TextWrapping="Wrap" 
                   Margin="5, 20, 0, 10"
                   FontWeight="Bold"
                   FontSize="15"/>

                <!--TextWrapping-->
                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="5" Margin="5, 0, 0, 0" HorizontalAlignment="Left">
                    <TextBlock TextWrapping="Wrap" Background="BurlyWood" Padding="5" HorizontalAlignment="Left">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum mi sem, ut egestas purus pulvinar sit amet. Donec imperdiet quis mi eget tincidunt. Duis porttitor lacus et dignissim hendrerit. Morbi pellentesque blandit aliquam.
                    </TextBlock>
                </Border>
            </StackPanel>
        </TabItem>


        <TabItem Header="StackPanel">
            <StackPanel Margin="10">
                <TextBlock Text="StackPanel ustawia elementy sekwencyjnie w rzędach lub kolumnach ale nie przenosi je do nowego rzędu/kolumny, gdy brakuje miejsca"
                   TextWrapping="Wrap" 
                   Margin="0, 0, 0, 10"
                   FontWeight="Bold"
                   FontSize="15"/>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="10">
                    <Button Content="Button 1" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 2" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 3" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 4" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 5" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 6" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 7" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 8" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 9" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 10" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 11" Width="100" Height="50" Margin="5"/>
                    <Button Content="Button 12" Width="100" Height="50" Margin="5"/>
                </StackPanel>

                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="5" Margin="15, 0, 0, 0" HorizontalAlignment="Left">
                    <TextBlock Background="BurlyWood" Padding="5" HorizontalAlignment="Left">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rutrum mi sem, ut egestas purus pulvinar sit amet. Donec imperdiet quis mi eget tincidunt. Duis porttitor lacus et dignissim hendrerit. Morbi pellentesque blandit aliquam.
                    </TextBlock>
                </Border>

                <TextBlock Text="StackPanel jest użyteczny tam, gdzie używamy scroll, lub przy tworzeniu carouselu"
                   TextWrapping="Wrap" 
                   Margin="5, 20, 0, 10"
                   FontSize="15"/>
            </StackPanel>
        </TabItem>

        <!-- DockPanel Tab -->
        <TabItem Header="DockPanel">
            <DockPanel LastChildFill="True" Margin="10">

                <Button Content="Toggle FlowDirection" DockPanel.Dock="Top"  Height="60" HorizontalAlignment="Stretch" Margin="5, 5, 0, 5" Click="ToggleFlowDirection_Click"/>
                <Button Content="Left" DockPanel.Dock="Left" Width="100" Margin="5"/>
                <Button Content="Right" DockPanel.Dock="Right" Width="100" Margin="5"/>
                <Button Content="DockPanel pozwala przypisać elementy do krawędzi panelu" DockPanel.Dock="Bottom" Height="50" HorizontalAlignment="Stretch" Margin="5"/>
                <Button Content="LastChildFill=True - wypelni calą pozostałą przestrzeń" HorizontalAlignment="Left" Margin="5"/>
            </DockPanel>
        </TabItem>

        <!-- Grid Tab -->
        <!-- 1* 2* 4*-->
        <!-- Grid.IsSharedSizeScope-->
        <TabItem Header="Grid">
            <Grid ShowGridLines="True" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="6*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Grid Layout Example" FontSize="24" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Margin="5"/>
                <TextBlock TextWrapping="WrapWithOverflow" Text="Grid pozwala na bardziej precyzyjne rozmieszczenie elementów dzięki definiowaniu kolumn i wierszy, które mogą mieć rozmiary automatyczne lub procentowe." FontSize="15" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Margin="5, 40, 0, 0"/>

                <Button Content="Button 1" Grid.Column="0" Grid.Row="1" Width="100" Margin="5"/>
                <TextBlock Text="Dołączona właściwość `Grid.IsSharedSizeScope` jest przydatna, gdy chcemy udostępniać ten sam rozmiar między wieloma elementami w siatce." TextWrapping="WrapWithOverflow" Grid.Column="1" FontSize="15" Grid.Row="1" VerticalAlignment="Center" Margin="5"/>

                <Button Content="Button 2" Grid.Column="0" Grid.Row="2" Width="100" Height="60"  Margin="5"/>
                
                <WrapPanel Grid.Column="1" Grid.Row="2" Grid.IsSharedSizeScope="True">
                    <TextBlock Text="Przykładowo, elementy w różnych siatkach mogą mieć tę samą szerokość, jeśli największy element ustawi szerokość, którą dziedziczą pozostałe." TextWrapping="WrapWithOverflow" Grid.Column="1" FontSize="15" Grid.Row="1" VerticalAlignment="Center" Margin="5"/>

                    <Grid Margin="0,10,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"  SharedSizeGroup="Column1" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column2" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name:" Grid.Column="0" Margin="10,0,0,0" FontSize="15"/>
                        <TextBox Grid.Column="1" Width="120" />
                        <Button Content="Edit" Grid.Column="2" />
                    </Grid>
                    <!-- Mozemy zmieniac rozmiary ręcznie-->
                    <Grid Margin="0,10,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" SharedSizeGroup="Column1" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column2" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Address:" Grid.Column="0" Margin="10,0,0,0" FontSize="15"/>
                        <TextBox Grid.Column="1" Width="150" />
                        <Button Content="Edit" Grid.Column="2" />
                    </Grid>
                </WrapPanel>
            </Grid>
        </TabItem>

        <!-- Language and FlowDirection Demo Tab -->
        <TabItem Header="Language Demo" >
            <StackPanel Margin="10" >
                <TextBlock Text="FlowDirection" TextWrapping="WrapWithOverflow" Grid.Column="1" FontSize="18" Grid.Row="1" FontWeight="Bold" VerticalAlignment="Center" Margin="5"/>

                <TextBlock Text="FlowDirection to właściwość w WPF, która określa kierunek przepływu zawartości tekstowej i elementów interfejsu." TextWrapping="WrapWithOverflow" FontSize="15"  Margin="5, 0, 0, 0"/>
                <TextBlock Text="Istnieją dwa główne ustawienia:" TextWrapping="WrapWithOverflow" FontSize="15"  Margin="5,0,0,0"/>
                <TextBlock Text="LeftToRight (LTR) – domyślny kierunek przepływu od lewej do prawej." TextWrapping="WrapWithOverflow" FontSize="15" FontWeight="DemiBold" Margin="5,20,0,0"/>

                <!-- English Layout (LTR) -->
                <DockPanel Margin="5, 15, 0, 0" FlowDirection="LeftToRight" >
                    <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Margin="0" HorizontalAlignment="Left" Background="LightBlue">
                        <TextBlock FontSize="20" Text="My name is Hope." Padding="10"/>
                    </Border>
                </DockPanel>

                <TextBlock Text="RightToLeft (RTL) – kierunek przepływu od prawej do lewej, stosowany w językach takich jak arabski czy hebrajski." TextWrapping="WrapWithOverflow" FontSize="15" FontWeight="DemiBold" Margin="5,30,0,0"/>

                <!-- Arabian Layout (LTR) -->
                <DockPanel Margin="5, 5, 0, 0" FlowDirection="RightToLeft">
                    <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Margin="0" HorizontalAlignment="Left" Background="LightCoral">
                        <TextBlock FontSize="20" Text="اسمي الأمل." Padding="10"/>
                    </Border>
                </DockPanel>

                <TextBlock Text="Są jednak problemy w stosowaniu tej biblioteki. Jednym z takich jest konwersja cyfr z Europejskiego na Arabski" TextWrapping="WrapWithOverflow" FontSize="15"  Margin="5, 30, 0, 0"/>

                <DockPanel Margin="10">
                    <TextBlock Language="ar-SA" FlowDirection="RightToLeft" FontSize="20">
                        12345
                    </TextBlock>
                </DockPanel>

                <DockPanel Margin="10" >
                    <TextBlock Language="ar-SA" xml:lang="ar-SA" FontSize="20" NumberSubstitution.Substitution="NativeNational">
                        12345
                    </TextBlock>
                </DockPanel>

                <!-- Arabic Layout with RTL and European Numbers -->
                <DockPanel Margin="10" FlowDirection="RightToLeft">
                    <TextBlock FontSize="20" Language="ar-SA" NumberSubstitution.Substitution="European">
                        12345
                    </TextBlock>
                </DockPanel>
            </StackPanel>
        </TabItem>
    </TabControl>
</Window>
